name: Build and Release Plugin

on:
  push:
    branches:
      - 'main'   # Run on every push to main branch
    tags:
      - 'v*'   # Also run on version tags
  workflow_dispatch:  # Allows manual trigger via button
    inputs:
      release_tag:
        description: 'Tag name for release (e.g. v1.5.0)'
        required: true
        default: 'v1.0.0'
      release_name:
        description: 'Release name'
        required: false
        default: 'Auto Release'
      prerelease:
        description: 'Mark as pre-release?'
        required: false
        type: boolean
        default: false

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: '3.9.6'

      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew

      - name: Download BuildTools
        run: |
          mkdir -p BuildTools
          cd BuildTools
          wget https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar
          # Create a local maven settings file to use HTTPS instead of HTTP
          echo '<settings>
            <mirrors>
              <mirror>
                <id>maven-default-http-blocker</id>
                <mirrorOf>external:http:*</mirrorOf>
                <name>Pseudo repository to mirror external repositories initially using HTTP.</name>
                <url>https://maven.apache.org/repository</url>
                <blocked>false</blocked>
              </mirror>
            </mirrors>
          </settings>' > ~/.m2/settings.xml

      - name: Build CraftBukkit Dependencies
        run: |
          cd BuildTools
          export MAVEN_OPTS="-Dhttps.protocols=TLSv1.2"
          java -Dhttps.protocols=TLSv1.2 -jar BuildTools.jar --remapped --compile craftbukkit --rev 1.21.8

      - name: Build with Gradle
        run: ./gradlew build
        env:
          JAVA_HOME: /usr/lib/jvm/temurin-21-jdk-amd64

      - name: Find JAR in libs
        id: find_jar
        run: |
          JAR_FILE=$(ls build/libs/*.jar | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "❌ No JAR file found! Build may have failed."
            exit 1
          fi
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "BASE_NAME=$(basename "$JAR_FILE")" >> $GITHUB_OUTPUT

      - name: Determine Tag and Release Name
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
            echo "NAME=${{ github.event.inputs.release_name }}" >> $GITHUB_OUTPUT
            echo "PRERELEASE=${{ github.event.inputs.prerelease }}" >> $GITHUB_OUTPUT
          else
            echo "TAG=${{ github.ref }}" >> $GITHUB_OUTPUT
            echo "NAME=Release ${{ github.ref }}" >> $GITHUB_OUTPUT
            echo "PRERELEASE=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.TAG }}
          release_name: ${{ steps.vars.outputs.NAME }}
          draft: false
          prerelease: ${{ steps.vars.outputs.PRERELEASE }}

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_jar.outputs.JAR_FILE }}
          asset_name: ${{ steps.find_jar.outputs.BASE_NAME }}
          asset_content_type: application/java-archive
